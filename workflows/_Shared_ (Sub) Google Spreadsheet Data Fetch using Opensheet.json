{"createdAt":"2025-04-30T00:37:52.231Z","updatedAt":"2025-05-12T02:18:00.000Z","id":"hj1Qpz1LUngjnHW5","name":"_Shared_ (Sub) Google Spreadsheet Data Fetch using Opensheet","active":false,"nodes":[{"parameters":{"url":"=https://opensheet.elk.sh/{{ $node['Globals'].json.spreadsheet_id }}/{{ $node['Globals'].json.tab_name }}","options":{}},"name":"HTTP Request","type":"n8n-nodes-base.httpRequest","typeVersion":1,"position":[240,-440],"id":"323509ca-da6c-418d-971f-d0d72dff10bb"},{"parameters":{"functionCode":"// Check if we have valid data\nif (!Array.isArray(items[0].json)) {\n  return [\n    {\n      json: {\n        success: false,\n        message: 'Failed to retrieve data or no data available',\n        raw: items[0].json\n      }\n    }\n  ];\n}\n\n// Process the data\nconst data = items[0].json;\n\n// Log some information about the data\nconsole.log(`Received ${data.length} rows from spreadsheet`);\n\n// Add some metadata and process each row if needed\nreturn [\n  {\n    json: {\n      success: true,\n      total_rows: data.length,\n      timestamp: new Date().toISOString(),\n      source: {\n        spreadsheet_id: $node['Globals'].json.spreadsheet_id,\n        tab_name: $node['Globals'].json.tab_name\n      },\n      data: data.map((row, index) => {\n        // You can transform each row here if needed\n        return {\n          row_number: index + 1,\n          ...row\n        };\n      })\n    }\n  }\n];"},"name":"Process Data","type":"n8n-nodes-base.function","typeVersion":1,"position":[460,-440],"id":"8ad3f435-8e23-4a01-8625-4dbf647f2cb5"},{"parameters":{"jsCode":"// 외부에서 전달받은 데이터 확인\nconst inputData = $input || {};\nconst inputItem = inputData.item || {};\nconst inputJson = inputItem.json || {};\n\n// 파라미터 유효성 검사\nconst spreadsheetId = inputJson.spreadsheet_id || '';\nconst tabName = inputJson.tab_name || '';\n\n// 유효성 검사 결과 저장\nconst isValid = spreadsheetId !== '' && tabName !== '';\n\nreturn [{\n  json: {\n    spreadsheet_id: spreadsheetId,\n    tab_name: tabName,\n    validation: {\n      valid: isValid,\n      message: isValid ? 'All required parameters provided' : 'Missing required parameters: spreadsheet_id and tab_name must be provided'\n    }\n  }\n}];"},"id":"e475ae7a-684a-42ec-8997-1a14b4fb2d3c","name":"Set Variables","type":"n8n-nodes-base.code","typeVersion":1,"position":[-420,-340]},{"parameters":{"conditions":{"boolean":[{"value1":"={{$json[\"success\"]}}","value2":true}]}},"name":"IF","type":"n8n-nodes-base.if","typeVersion":1,"position":[680,-340],"id":"a16b0e28-aa15-49b1-bc99-c4585bf98719"},{"parameters":{"assignments":{"assignments":[{"id":"462fae39-491d-4b1e-944e-20cbf9380453","name":"spreadsheet_id","value":"={{ $node['Set Variables'].json.spreadsheet_id }}","type":"string"},{"id":"80efcf32-fc65-4302-98dc-78936847c3bc","name":"tab_name","value":"={{ $node['Set Variables'].json.tab_name }}","type":"string"},{"id":"90dfcf32-fc65-4302-98dc-78936847c3bc","name":"validation","value":"={{ $node['Set Variables'].json.validation }}","type":"object"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-200,-340],"id":"696efc7f-d2c3-4ab9-8ee8-8bc356c3f2a5","name":"Globals"},{"parameters":{"inputSource":"passthrough"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-640,-340],"id":"09f6f121-c94f-4860-a193-10ee6bbdab65","name":"When Executed by Another Workflow"},{"parameters":{"conditions":{"boolean":[{"value1":"={{ $node['Set Variables'].json.validation.valid }}","value2":true}]}},"name":"Check Parameters","type":"n8n-nodes-base.if","typeVersion":1,"position":[20,-340],"id":"7e5a1f8a-c52e-4c24-b3c3-a6e79b5ba195"},{"parameters":{"keepOnlySet":true,"values":{"boolean":[{"name":"success"}],"string":[{"name":"error","value":"={{ $node['Set Variables'].json.validation.message }}"}]},"options":{}},"name":"Error Response","type":"n8n-nodes-base.set","typeVersion":1,"position":[460,-240],"id":"33de8673-a388-4b30-acf7-33dbcc26a900"},{"parameters":{"content":"# 스프레드시트 데이터 가져오기 서브워크플로우\n\n## 목적\n이 서브워크플로우는 Opensheet API를 통해 Google 스프레드시트 데이터를 JSON 형태로 가져와 처리하는 재사용 가능한 컴포넌트입니다.\n\n## 필수 파라미터\n- `spreadsheet_id`: Google 스프레드시트 ID\n- `tab_name`: 가져올 시트 이름\n\n## 사용 방법\n1. Execute Workflow 노드로 호출\n2. 두 필수 파라미터를 JSON으로 전달\n3. 결과는 success 속성으로 성공/실패 확인\n\n## 응답 형식\n- 성공: `{success: true, total_rows: n, data: [...], source: {...}}`\n- 실패: `{success: false, error: \"오류 메시지\"}`\n\n## 검증 로직\n파라미터 누락 시 자동으로 오류 반환합니다.\n두 파라미터가 모두 제공된 경우에만 API 호출을 진행합니다.\n\n## 데이터 처리\n- 각 행에 row_number 추가\n- 데이터 소스 정보 포함\n- 타임스탬프 기록\n\n## 주의사항\n- 공개 스프레드시트만 사용 가능\n- 시트의 첫 행은 헤더로 사용됨\n- API 호출 제한에 주의\n\n## 예시 호출\n```json\n{\n  \"spreadsheet_id\": \"1h--hMzyvutjQr3zboupXNtAZ64pCWR9usB9ty1G5uYE\",\n  \"tab_name\": \"Sheet1\"\n}\n```","height":1440,"width":1780},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-820,-1520],"id":"c2fa6730-6c5c-47cf-9399-fe4e694aafa6","name":"Sticky Note"}],"connections":{"HTTP Request":{"main":[[{"node":"Process Data","type":"main","index":0}]]},"Process Data":{"main":[[{"node":"IF","type":"main","index":0}]]},"Set Variables":{"main":[[{"node":"Globals","type":"main","index":0}]]},"Globals":{"main":[[{"node":"Check Parameters","type":"main","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"Set Variables","type":"main","index":0}]]},"Check Parameters":{"main":[[{"node":"HTTP Request","type":"main","index":0}],[{"node":"Error Response","type":"main","index":0}]]},"Error Response":{"main":[[{"node":"IF","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"125baa88-e21f-44fb-92fa-0f1a6f3b2a98","triggerCount":0,"tags":[]}