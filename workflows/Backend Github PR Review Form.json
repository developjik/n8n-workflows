{"createdAt":"2025-05-16T01:40:27.356Z","updatedAt":"2025-05-16T02:53:12.000Z","id":"gb6KAcoOLAaqxdIF","name":"Backend Github PR Review Form","active":true,"nodes":[{"parameters":{"model":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"gpt-4o-mini"},"options":{}},"id":"b70498e1-d933-4e55-b9aa-981704c67c41","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[368,60],"typeVersion":1.2,"credentials":{"openAiApi":{"id":"teZK5ibPNHcUd7eK","name":"Developjik OpenAi account"}}},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const parseLastDiff = (gitDiff, filename) => { \n  gitDiff = gitDiff.replace(/\\n\\\\ No newline at end of file/, '')\n  \n  const diffList = gitDiff.trimEnd().split('\\n').reverse();\n  const lastLineFirstChar = diffList?.[0]?.[0];\n  const lastDiff =\n    diffList.find((item) => {\n      return /^@@ \\-\\d+,\\d+ \\+\\d+,\\d+ @@/g.test(item);\n    }) || '';\n\n  const [lastOldLineCount, lastNewLineCount] = lastDiff\n    .replace(/@@ \\-(\\d+),(\\d+) \\+(\\d+),(\\d+) @@.*/g, ($0, $1, $2, $3, $4) => {\n      return `${+$1 + +$2},${+$3 + +$4}`;\n    })\n    .split(',');\n  \n  if (!/^\\d+$/.test(lastOldLineCount) || !/^\\d+$/.test(lastNewLineCount)) {\n    return {\n      lastOldLine: -1,\n      lastNewLine: -1,\n      gitDiff: gitDiff,\n    };\n  }\n\n  const lastOldLine = lastLineFirstChar === '+' ? null : (parseInt(lastOldLineCount) || 0) - 1;\n  const lastNewLine = lastLineFirstChar === '-' ? null : (parseInt(lastNewLineCount) || 0) - 1;\n\n  return {\n    filename,\n    lastOldLine,\n    lastNewLine,\n    gitDiff,\n  };\n};\n\nreturn parseLastDiff($input.item.json.patch || '', $input.item.json.filename || '' )\n"},"id":"927fb1d6-1667-4445-96e8-0510f692381f","name":"Parse Last Diff Line","type":"n8n-nodes-base.code","position":[-160,-160],"typeVersion":2},{"parameters":{"promptType":"define","text":"=**파일 경로**: {{ $('Loop').item.json.filename }}\n\n다음은 백엔드 코드의 변경 사항입니다.  \n아래의 **기존 코드와 변경된 코드**를 기반으로, 다음 기준에 따라 **Java(Spring 기반) 백엔드 코드 리뷰**를 작성해 주세요.\n\n\n🧠 코드 리뷰 목적\n- 변경 의도와 목적을 먼저 파악\n- 코드 변경 후 새로운 코드에서 개선할 부분이 존재할시 제안 포함\n- 기술적 근거가 포함된 리뷰를 한국어로 Markdown 포맷으로 작성\n\n\n\n**🔀 코드 변경 전 원본 코드**:\n```tsx\n{{ $json.originalCode }}\n```\n\n**✅ 코드 변경 후 새로운 코드**:\n```tsx\n{{ $json.newCode }}\n```\n\n🎁 코드 리뷰는 동료 개발자의 성장을 돕는 관점에서 진심을 담아 작성해 주세요.","options":{"systemMessage":"=🧠 백엔드 코드 리뷰 전문가 프롬프트\n\n⸻\n\n🎯 역할 정의\n\n당신은 Java, Spring Framework, JPA, RESTful API에 정통한 백엔드 전문가입니다.\n단순한 지적이 아닌, 실질적인 개선 방향을 제시하고 동료 개발자의 성장을 돕는 코드 리뷰어로서 활동합니다.\n\n⸻\n\n✅ 리뷰 원칙\n\t1.\t정확한 이해\n코드의 의도와 맥락을 먼저 파악하고 그에 맞는 피드백을 제공합니다.\n\t2.\t실무 중심 전문성\n이론보다는 실무에서 즉시 도움이 되는 구조/패턴/리팩토링 중심으로 리뷰합니다.\n\t3.\t함께 개선하는 시선\n문제점을 지적하는 데 그치지 않고, 어떻게 개선하면 좋을지 구체적인 제안을 함께 제공합니다.\n\t4.\t다각도 고려\n유지보수성, 성능, 보안, 협업 관점까지 다양한 각도에서 피드백합니다.\n\t5.\t교육적 접근\n단순한 코드 설명이 아니라, “왜 이런 구조가 더 좋은가?”를 함께 설명하여 학습에 기여합니다.\n\n⸻\n\n🧾 리뷰 포맷\n\t•\t언어: 한국어\n\t•\t형식: Markdown\n\t•\t스타일: 명확하고 간결하며 진심 담긴 설명\n\t•\t이모지: ✨, ⚠️, 💡 등으로 핵심 포인트 강조\n\t•\t코드: 개선 제안 시 Java 또는 Spring 기반 예제 코드 포함\n\n⸻\n\n🔍 리뷰 체크리스트\n\n📦 Java & OOP\n\t•\t단일 책임 원칙(SRP), 의존성 역전, 캡슐화\n\t•\t메서드/클래스 명명 규칙 일관성\n\t•\t불변성 유지, Null-Safety 대응 (Optional, @NonNull)\n\n🌱 Spring Framework\n\t•\tBean 주입 방식(@Autowired, 생성자 주입)\n\t•\tController-Service-Repository 분리 및 계층 책임\n\t•\tAOP, 트랜잭션 처리, 예외 처리 일관성\n\n🛠️ JPA & Database\n\t•\tEntity 설계의 명확성 (@Entity, @Embedded, @ValueObject)\n\t•\tN+1 문제 및 Fetch 전략 (LAZY, JOIN FETCH)\n\t•\tQuery의 성능 및 JPQL/NativeQuery 적절성\n\n🔐 보안 및 예외\n\t•\t입력 검증 (@Valid, @Validated)\n\t•\t전역 예외 처리 (@ControllerAdvice)\n\t•\t인증/인가 흐름과 보안 설정\n\n📦 테스트\n\t•\t단위/통합 테스트 코드 존재 여부\n\t•\t테스트 코드의 명확한 목적과 검증 방식\n\n🚀 성능 최적화\n\t•\t불필요한 연산 제거, 캐싱 전략\n\t•\t스트림/람다 사용 최적화\n\t•\t메모리 및 트랜잭션 범위 최적화\n\n⸻\n\n🎁 리뷰 시 항상 포함되는 추가 제안\n\n항목\t설명\n💡 대안 코드 예시\t현재 구조보다 더 나은 방향의 코드 예시를 Java 기반으로 제공합니다.\n🛠️ 리팩토링 방향 제안\t메서드 분리, 전략 패턴 도입, 설정/핵심 로직 분리 등\n📚 참고 링크 / 문서\t공식 문서, 블로그 글, 실무 사례 등 학습에 도움이 될 링크 공유\n🔄 컨벤션 정리\t반복적으로 발생할 수 있는 네이밍/패키징/어노테이션 위치 등을 컨벤션으로 제안\n\n\n⸻\n\n📊 코드 평가 점수: {점수}점 / 100\n\n이 형식을 반드시 그대로 유지해 주세요.\n\n⸻\n\n💬 예시 리뷰 톤\n\n⸻\n\n✅ 전반적인 피드백\n\n서비스 레이어와 도메인 로직이 잘 분리되어 있어 구조적으로 명확합니다.\n특히 @Transactional을 필요한 메서드에만 적용한 점이 좋은 선택입니다 👏\n\n다만, 예외 처리 방식이 컨트롤러 내에 개별적으로 분산되어 있어 전역 예외 처리(@ControllerAdvice) 도입 시 유지보수에 더 유리할 수 있습니다.\n\n⸻\n\n⚠️ 개선 포인트\n\t1.\tEntity에서 비즈니스 로직 처리\n\t•\t현재 UserEntity에서 외부 시스템 호출 로직이 포함되어 있습니다.\n\t•\t→ 도메인 객체는 순수하게 유지하고, 서비스로 분리하면 응집도를 높일 수 있습니다.\n\n⸻\n\n💡 개선 제안\n\n// 개선 전 - Entity가 외부 시스템 호출\npublic class User {\n    public void syncToExternalSystem() {\n        externalClient.sendData(this);\n    }\n}\n\n// 개선 후 - 서비스 계층에서 처리\npublic class UserService {\n    public void syncUser(User user) {\n        externalClient.sendData(user);\n    }\n}\n\n\n⸻\n\n📚 참고 링크 예시\n\t•\tSpring 공식 문서 - 예외 처리 전략\n\t•\tBaeldung - Spring Best Practices\n\n⸻\n\n🔄 컨벤션 제안 예시\n\t•\tDTO 클래스는 XXXRequest, XXXResponse 형태로 명명하여 의도 구분을 명확히 하시면 좋겠습니다.\n\n⸻  \n📊 코드 평가 점수: 78점 / 100  \n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[280,-160],"id":"8e1bbbdb-9c44-4f71-ac45-11b51575b0d7","name":"AI Agent"},{"parameters":{"url":"=https://api.github.com/repos/{{ $('Form Trigger').item.json.github_organization }}/{{ $('Form Trigger').item.json.github_repo }}/pulls/{{ $('Form Trigger').item.json.pr_number }}/files","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Accept","value":"application/vnd.github.v3+json"},{"name":"Authorization","value":"=Bearer {{$node[\"Get COLO Variables\"].json.github_auth}}"}]},"options":{}},"id":"f8c5b4d2-3358-4d03-8150-2bd8af27c0dc","name":"Get PR Files Change","type":"n8n-nodes-base.httpRequest","position":[-820,140],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"501623a9-9515-4034-bb13-a5a6a4f924eb","operator":{"type":"string","operation":"isNotEmpty"},"leftValue":"={{ $json.patch }}","rightValue":""},{"id":"f2928260-ef04-47cb-9c36-432e29fe52d1","leftValue":"={{ $json.changes }}","rightValue":10,"operator":{"type":"number","operation":"gte"}}],"combinator":"or"},"looseTypeValidation":true,"options":{"ignoreCase":false}},"id":"a1b3126e-2f94-463e-93e8-36ee203fc790","name":"Skip File Change","type":"n8n-nodes-base.if","position":[-380,-160],"typeVersion":2.2},{"parameters":{"method":"POST","url":"=https://api.github.com/repos/{{ $('Form Trigger').item.json.github_organization }}/{{ $('Form Trigger').item.json.github_repo }}/pulls/{{ $('Form Trigger').item.json.pr_number }}/comments","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Accept","value":"application/vnd.github.v3+json"},{"name":"Authorization","value":"=Bearer {{$node[\"Get COLO Variables\"].json.github_auth}}"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"body","value":"={{ $('Process GPT Review').item.json.review }}"},{"name":"commit_id","value":"={{ $('Get PR Info').item.json.head.sha }}"},{"name":"path","value":"={{ $('Loop').item.json.filename }}"},{"name":"line","value":"={{ $('Parse Last Diff Line').item.json.lastNewLine || $('Parse Last Diff Line').item.json.lastOldLine || 1 }}"},{"name":"side","value":"={{ $('Parse Last Diff Line').item.json.lastNewLine ? 'RIGHT' : 'LEFT' }}"}]},"options":{}},"id":"d7b6ab33-7455-4a38-933d-4eb0acd6f291","name":"Post PR Comment","type":"n8n-nodes-base.httpRequest","position":[1096,-35],"typeVersion":4.2},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-600,140],"id":"1868be98-e54f-4e68-9bc4-0f74c3fc69ab","name":"Loop"},{"parameters":{"jsCode":"var review = $input.item.json.output || '';\n\n// 정규식: 다양한 표현 대응 (굵게, 콜론, 이모지, 공백)\nvar scoreMatch = review.match(/(?:📊\\s*)?(?:\\*\\*)?코드\\s*평가\\s*점수(?:\\*\\*)?[:：]?\\s*(\\d+)/);\n\nvar score = scoreMatch ? parseInt(scoreMatch[1], 10) : 0;\n\n// 점수 앞까지만 잘라내기\nvar trimmedReview = review.split(/(?:📊\\s*)?(?:\\*\\*)?코드\\s*평가\\s*점수(?:\\*\\*)?[:：]/)[0].trim();\n\nreturn [\n  {\n    json: {\n      score: score,\n      review: trimmedReview\n    }\n  }\n];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[660,-160],"id":"ed9cf796-56d4-412f-8ff1-4c386325de3f","name":"Process GPT Review"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"8ab43db0-3e45-4ce0-8658-34d2d53fe6ac","leftValue":"={{ $json.score }}","rightValue":80,"operator":{"type":"number","operation":"lt"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[876,-160],"id":"d25356be-a80b-4023-bb77-8c53e2634411","name":"If GPT Review Needed"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"var diff = $input.item.json.gitDiff || ''\n\nlet lines = diff.trimEnd().split('\\n');\n\nlet originalCode = '';\nlet newCode = '';\n\nlines.forEach(line => {\n    if (line.startsWith('-')) {\n        originalCode += line.substring(1) + \"\\n\";\n    } else if (line.startsWith('+')) {\n        newCode += line.substring(1) + \"\\n\";\n    } else if (!line.startsWith('@')) {\n        originalCode += line + \"\\n\";\n        newCode += line + \"\\n\";\n    }\n});\n\nconst codeObj = {\n  originalCode: originalCode,\n  newCode: newCode\n};\n\nreturn codeObj\n"},"id":"b52e65f0-5608-42c2-be20-cb16c76f087f","name":"Code","type":"n8n-nodes-base.code","position":[60,-160],"typeVersion":2},{"parameters":{"formTitle":"Backend Github PR Review","formDescription":"Backend Github PR Review를 AI에 요청합니다.","formFields":{"values":[{"fieldLabel":"github_organization","fieldType":"dropdown","fieldOptions":{"values":[{"option":"colosseumcoinckr"}]},"requiredField":true},{"fieldLabel":"github_repo","fieldType":"dropdown","fieldOptions":{"values":[{"option":"pms-backend"}]},"requiredField":true},{"fieldLabel":"pr_number","fieldType":"number","placeholder":"PR 번호를 입력하세요.","requiredField":true}]},"options":{"appendAttribution":false,"buttonLabel":"PR Review 요청","path":"backend-code-review","ignoreBots":true}},"type":"n8n-nodes-base.formTrigger","typeVersion":2.2,"position":[-1700,140],"id":"4ef608b6-6d6b-40f8-84f4-00167688cd82","name":"Form Trigger","webhookId":"b26f5221-45bc-4833-b0ed-0334aaa880ea"},{"parameters":{"url":"=https://api.github.com/repos/{{ $('Form Trigger').item.json.github_organization }}/{{ $('Form Trigger').item.json.github_repo }}/pulls/{{ $('Form Trigger').item.json.pr_number }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Accept","value":"application/vnd.github.v3+json"},{"name":"Authorization","value":"=Bearer {{$node[\"Get COLO Variables\"].json.github_auth}}"}]},"options":{}},"id":"b2efe77a-6340-4b81-aa16-d9690f5344bf","name":"Get PR Info","type":"n8n-nodes-base.httpRequest","position":[-1260,140],"typeVersion":4.2},{"parameters":{"workflowId":{"__rl":true,"value":"uGqCptWtD45pUJt4","mode":"list","cachedResultName":"[COLO] (Sub) Get COLO Variables"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-1480,140],"id":"93dac43f-72fd-4fa8-9b21-f4e1469e6bec","name":"Get COLO Variables"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"3304ec64-441d-425a-b376-fcbff85583b3","leftValue":"={{ $json.state }}","rightValue":"open","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1040,140],"id":"215657e2-54eb-4d10-84e8-f5df1759f9ab","name":"If PR Opened"}],"connections":{"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Parse Last Diff Line":{"main":[[{"node":"Code","type":"main","index":0}]]},"AI Agent":{"main":[[{"node":"Process GPT Review","type":"main","index":0}]]},"Get PR Files Change":{"main":[[{"node":"Loop","type":"main","index":0}]]},"Skip File Change":{"main":[[{"node":"Parse Last Diff Line","type":"main","index":0}],[{"node":"Loop","type":"main","index":0}]]},"Post PR Comment":{"main":[[{"node":"Loop","type":"main","index":0}]]},"Loop":{"main":[[],[{"node":"Skip File Change","type":"main","index":0}]]},"Process GPT Review":{"main":[[{"node":"If GPT Review Needed","type":"main","index":0}]]},"If GPT Review Needed":{"main":[[{"node":"Post PR Comment","type":"main","index":0}],[{"node":"Loop","type":"main","index":0}]]},"Code":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Form Trigger":{"main":[[{"node":"Get COLO Variables","type":"main","index":0}]]},"Get COLO Variables":{"main":[[{"node":"Get PR Info","type":"main","index":0}]]},"Get PR Info":{"main":[[{"node":"If PR Opened","type":"main","index":0}]]},"If PR Opened":{"main":[[{"node":"Get PR Files Change","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"c9701a89-3993-4ace-b740-19b7ac46ca24","triggerCount":1,"tags":[]}