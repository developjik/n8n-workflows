{"createdAt":"2025-05-16T00:58:19.573Z","updatedAt":"2025-05-16T02:53:25.000Z","id":"YfdG510wDgTIZS0Q","name":"Frontend Github PR Review Form","active":true,"nodes":[{"parameters":{"model":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"gpt-4o-mini"},"options":{}},"id":"eda0fb27-aa61-45e5-9a64-0aedd93cd305","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[368,60],"typeVersion":1.2,"credentials":{"openAiApi":{"id":"teZK5ibPNHcUd7eK","name":"Developjik OpenAi account"}}},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const parseLastDiff = (gitDiff, filename) => { \n  gitDiff = gitDiff.replace(/\\n\\\\ No newline at end of file/, '')\n  \n  const diffList = gitDiff.trimEnd().split('\\n').reverse();\n  const lastLineFirstChar = diffList?.[0]?.[0];\n  const lastDiff =\n    diffList.find((item) => {\n      return /^@@ \\-\\d+,\\d+ \\+\\d+,\\d+ @@/g.test(item);\n    }) || '';\n\n  const [lastOldLineCount, lastNewLineCount] = lastDiff\n    .replace(/@@ \\-(\\d+),(\\d+) \\+(\\d+),(\\d+) @@.*/g, ($0, $1, $2, $3, $4) => {\n      return `${+$1 + +$2},${+$3 + +$4}`;\n    })\n    .split(',');\n  \n  if (!/^\\d+$/.test(lastOldLineCount) || !/^\\d+$/.test(lastNewLineCount)) {\n    return {\n      lastOldLine: -1,\n      lastNewLine: -1,\n      gitDiff: gitDiff,\n    };\n  }\n\n  const lastOldLine = lastLineFirstChar === '+' ? null : (parseInt(lastOldLineCount) || 0) - 1;\n  const lastNewLine = lastLineFirstChar === '-' ? null : (parseInt(lastNewLineCount) || 0) - 1;\n\n  return {\n    filename,\n    lastOldLine,\n    lastNewLine,\n    gitDiff,\n  };\n};\n\nreturn parseLastDiff($input.item.json.patch || '', $input.item.json.filename || '' )\n"},"id":"37459b35-a9ad-495f-82cb-ee386e4d6f66","name":"Parse Last Diff Line","type":"n8n-nodes-base.code","position":[-160,-160],"typeVersion":2},{"parameters":{"promptType":"define","text":"=파일 경로: {{ $('Loop').item.json.filename }}\n\n다음은 프론트엔드 코드의 변경 사항입니다.  \n아래의 **기존 코드와 변경된 코드**를 기반으로, 다음 기준에 따라 **React/Next.js 기반 코드 리뷰**를 작성해 주세요.\n\n\n🧠 코드 리뷰 목적\n- 변경 의도와 목적을 먼저 파악\n- 코드 변경 후 새로운 코드에서 개선할 부분이 존재할시 제안 포함 \n- 기술적 근거가 포함된 리뷰를 한국어로 Markdown 포맷으로 작성\n\n\n\n**🔀 코드 변경 전 원본 코드**:\n```tsx\n{{ $json.originalCode }}\n```\n\n**✅ 코드 변경 후 새로운 코드**:\n```tsx\n{{ $json.newCode }}\n```\n\n🎁 코드 리뷰는 동료 개발자의 성장을 돕는 관점에서 진심을 담아 작성해 주세요.","options":{"systemMessage":"=🧠 프론트엔드 코드 리뷰 전문가 프롬프트 (최종 개선 버전)\n\n🎯 역할 정의\n\n당신은 React, TypeScript, Next.js, Tailwind CSS에 정통한 프론트엔드 전문가입니다.\n단순한 지적이 아닌, 실질적인 개선 방향을 제시하고 동료 개발자의 성장을 돕는 코드 리뷰어로서 활동합니다.\n\n⸻\n\n✅ 리뷰 원칙\n\t1.\t정확한 이해\n코드의 의도와 맥락을 먼저 파악하고 그에 맞는 피드백을 제공합니다.\n\t2.\t실무 중심 전문성\n이론이 아닌, 현업에서 즉시 도움이 되는 구조/패턴/리팩토링 중심으로 리뷰합니다.\n\t3.\t함께 개선하는 시선\n문제점을 짚는 것에 그치지 않고, 어떻게 개선하면 좋을지 구체적인 제안을 함께 제공합니다.\n\t4.\t다각도 고려\n유지보수성, 성능, 사용자 경험, 팀 협업까지 다양한 관점에서 피드백합니다.\n\t5.\t교육적 접근\n단순한 코드 설명이 아니라, “왜 이런 구조가 더 좋은가?”를 함께 설명하여 학습에 기여합니다.\n\n⸻\n\n🧾 리뷰 포맷\n\t•\t언어: 한국어\n\t•\t형식: Markdown\n\t•\t스타일: 명확하고 간결하며 진심 담긴 설명\n\t•\t이모지: ✨, ⚠️, 💡 등으로 핵심 포인트 강조\n\t•\t코드: 개선 제안 시 TypeScript 기반의 코드 예시 포함\n\n⸻\n\n🔍 리뷰 체크리스트\n\n🔧 React/JSX\n\t•\t컴포넌트 분리 및 책임 원칙 (SRP)\n\t•\t상태 및 props 관리 방식 (useState, useReducer, 전역 상태 등)\n\t•\t렌더링 최적화 (memo, useCallback, useMemo)\n\t•\t사이드 이펙트 처리 (useEffect의 의존성 배열 및 정리 함수)\n\t•\t조건부 렌더링 가독성\n\t•\t오류 처리 흐름 (ErrorBoundary, fallback UI 등)\n\n🔐 TypeScript\n\t•\t타입 정의 명확성 및 재사용성\n\t•\t타입 추론 vs 명시적 선언 균형\n\t•\t제네릭, 유니온, 인터섹션 타입 활용\n\t•\t타입 안전성 보장 (any 최소화, 좁히기 등)\n\n🎨 Tailwind CSS\n\t•\t클래스 구성의 명확성\n\t•\t중복 유틸리티 최소화 (@apply 및 컴포넌트화)\n\t•\t반응형 및 상태 기반 클래스 처리 (hover:, sm: 등)\n\t•\t디자인 시스템 기반 컬러/타이포/여백 일관성\n\n🚀 성능 최적화\n\t•\t불필요한 렌더링 방지\n\t•\t무거운 연산의 메모이제이션\n\t•\t코드 스플리팅 (next/dynamic, React.lazy)\n\t•\t클린업 없는 사이드 이펙트 방지 (useEffect 메모리 누수 등)\n\n♿️ 접근성 (a11y)\n\t•\tARIA 속성 활용\n\t•\t키보드 네비게이션 보장\n\t•\t색상 대비 및 시각적 가독성\n\t•\t스크린 리더 호환성 고려\n⸻\n\n🎁 리뷰 시 항상 포함되는 추가 제안\n\n항목\t설명\n💡 대안 코드 예시\t현재 구조보다 더 나은 방향의 코드 예시를 TypeScript로 제공합니다.\n🛠️ 리팩토링 방향 제안\t로직 분리, 커스텀 훅 활용, 컨테이너/프리젠테이션 분리 등 실무에 적합한 개선 방향을 제시합니다.\n📚 참고 링크 / 문서\t공식 문서, 블로그 글, 실무 사례 등 학습에 도움이 될만한 링크를 공유합니다.\n🔄 컨벤션 정리\t반복적으로 발생할 수 있는 팀 내 코드 스타일이나 네이밍 이슈는 컨벤션 제안으로 정리합니다.\n\n📊 코드 평가 점수는 100점 만점 기준으로 다음 형식으로 표시해 주세요:\n\n📊 코드 평가 점수: {점수}점 / 100\"\n\n⸻\n\n💬 예시 리뷰 톤\n\n### ✅ 전반적인 피드백  \n\n컴포넌트의 구조가 깔끔하고, 상태 흐름도 잘 정리되어 있어 유지보수성이 높습니다. 특히 `useEffect`의 정리 함수 처리가 인상적입니다 👏  \n다만, `props` 전달 방식이 약간 과도하게 중첩되어 있어 간단한 리팩토링으로 더 명확해질 수 있습니다.\n\n---\n\n### ⚠️ 개선 포인트\n\n1. **컴포넌트 분리 부족**\n   - `Modal` 내에서 너무 많은 로직이 함께 처리되고 있습니다.\n   - → `useModalState` 커스텀 훅으로 분리하면 테스트성과 재사용성이 증가합니다.\n\n---\n\n### 💡 개선 제안\n\n```tsx\n// useModalState.ts\nexport const useModalState = () => {\n  const [isOpen, setOpen] = useState(false);\n  return {\n    isOpen,\n    open: () => setOpen(true),\n    close: () => setOpen(false),\n  };\n};\n\n\n⸻\n\n📚 참고 링크 예시\n\t•\tReact 공식 - 훅의 추출\n\t•\tKent C. Dodds - UI 상태 관리 전략\n⸻\n\n⸻\n\n🔄 팀 컨벤션 제안 예시\n\n현재 props 명명 규칙이 컴포넌트마다 달라 가독성이 떨어질 수 있습니다.\n→ onXxx, isXxx 패턴으로 정리해보면 어떨까요?\n\n📊 코드 평가 점수: 78점 / 100"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[280,-160],"id":"f9685ef1-0fb3-4eed-a0d9-2dce3f29f75a","name":"AI Agent"},{"parameters":{"url":"=https://api.github.com/repos/{{ $('Form Trigger').item.json.github_organization }}/{{ $('Form Trigger').item.json.github_repo }}/pulls/{{ $('Form Trigger').item.json.pr_number }}/files","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Accept","value":"application/vnd.github.v3+json"},{"name":"Authorization","value":"=Bearer {{$node[\"Get COLO Variables\"].json.github_auth}}"}]},"options":{}},"id":"b3a2b83f-f2c3-4364-abe7-0fb12e11a7e1","name":"Get PR Files Change","type":"n8n-nodes-base.httpRequest","position":[-820,165],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"501623a9-9515-4034-bb13-a5a6a4f924eb","operator":{"type":"string","operation":"isNotEmpty"},"leftValue":"={{ $json.patch }}","rightValue":""},{"id":"f2928260-ef04-47cb-9c36-432e29fe52d1","leftValue":"={{ $json.changes }}","rightValue":20,"operator":{"type":"number","operation":"gte"}}],"combinator":"or"},"looseTypeValidation":true,"options":{"ignoreCase":false}},"id":"ebb5f1b7-23a6-404d-81a5-00539bf3a642","name":"Skip File Change","type":"n8n-nodes-base.if","position":[-380,-160],"typeVersion":2.2},{"parameters":{"method":"POST","url":"=https://api.github.com/repos/{{ $('Form Trigger').item.json.github_organization }}/{{ $('Form Trigger').item.json.github_repo }}/pulls/{{ $('Form Trigger').item.json.pr_number }}/comments","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Accept","value":"application/vnd.github.v3+json"},{"name":"Authorization","value":"=Bearer {{$node[\"Get COLO Variables\"].json.github_auth}}"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"body","value":"={{ $('Process GPT Review').item.json.review }}"},{"name":"commit_id","value":"={{ $('Webhook').item.json.body.pull_request.head.sha }}"},{"name":"path","value":"={{ $('Loop').item.json.filename }}"},{"name":"line","value":"={{ $('Parse Last Diff Line').item.json.lastNewLine || $('Parse Last Diff Line').item.json.lastOldLine || 1 }}"},{"name":"side","value":"={{ $('Parse Last Diff Line').item.json.lastNewLine ? 'RIGHT' : 'LEFT' }}"}]},"options":{}},"id":"b8f9f6d2-ece6-4253-8e3f-712f59e8b17c","name":"Post PR Comment","type":"n8n-nodes-base.httpRequest","position":[1096,40],"typeVersion":4.2},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-600,165],"id":"8a72933d-cf83-49e3-9202-b4ab45b18b1e","name":"Loop"},{"parameters":{"jsCode":"var review = $input.item.json.output || '';\n\n// 정규식: 다양한 표현 대응 (굵게, 콜론, 이모지, 공백)\nvar scoreMatch = review.match(/(?:📊\\s*)?(?:\\*\\*)?코드\\s*평가\\s*점수(?:\\*\\*)?[:：]?\\s*(\\d+)/);\n\nvar score = scoreMatch ? parseInt(scoreMatch[1], 10) : 0;\n\n// 점수 앞까지만 잘라내기\nvar trimmedReview = review.split(/(?:📊\\s*)?(?:\\*\\*)?코드\\s*평가\\s*점수(?:\\*\\*)?[:：]/)[0].trim();\n\nreturn [\n  {\n    json: {\n      score: score,\n      review: trimmedReview\n    }\n  }\n];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[660,-160],"id":"16e15ce1-899c-461b-afb3-f73b72f1ac35","name":"Process GPT Review"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"8ab43db0-3e45-4ce0-8658-34d2d53fe6ac","leftValue":"={{ $json.score }}","rightValue":80,"operator":{"type":"number","operation":"lt"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[876,-35],"id":"3641938f-3d1b-42af-a846-1083180cd555","name":"If GPT Review Needed"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"var diff = $input.item.json.gitDiff || ''\n\nlet lines = diff.trimEnd().split('\\n');\n\nlet originalCode = '';\nlet newCode = '';\n\nlines.forEach(line => {\n    if (line.startsWith('-')) {\n        originalCode += line.substring(1) + \"\\n\";\n    } else if (line.startsWith('+')) {\n        newCode += line.substring(1) + \"\\n\";\n    } else if (!line.startsWith('@')) {\n        originalCode += line + \"\\n\";\n        newCode += line + \"\\n\";\n    }\n});\n\nconst codeObj = {\n  originalCode: originalCode,\n  newCode: newCode\n};\n\nreturn codeObj\n"},"id":"d9b85b3f-88a2-4a19-b476-141b7d00b4ee","name":"Code","type":"n8n-nodes-base.code","position":[60,-160],"typeVersion":2},{"parameters":{"formTitle":"Github PR Review Request Form","formFields":{"values":[{"fieldLabel":"github_organization","fieldType":"dropdown","fieldOptions":{"values":[{"option":"colosseumcoinckr"}]},"requiredField":true},{"fieldLabel":"github_repo","fieldType":"dropdown","fieldOptions":{"values":[{"option":"pms-frontend"}]},"requiredField":true},{"fieldLabel":"pr_number","fieldType":"number","placeholder":"PR 번호를 입력하세요.","requiredField":true}]},"options":{}},"type":"n8n-nodes-base.formTrigger","typeVersion":2.2,"position":[-1700,160],"id":"d19427a1-0588-4722-b4ff-871e181e8b0c","name":"Form Trigger","webhookId":"7c0e93b8-4080-4fe7-9f94-4ab029a10f01"},{"parameters":{"url":"=https://api.github.com/repos/{{ $('Form Trigger').item.json.github_organization }}/{{ $('Form Trigger').item.json.github_repo }}/pulls/{{ $('Form Trigger').item.json.pr_number }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Accept","value":"application/vnd.github.v3+json"},{"name":"Authorization","value":"=Bearer {{$node[\"Get COLO Variables\"].json.github_auth}}"}]},"options":{}},"id":"22ad9c36-d728-422f-9b18-21faad162f5b","name":"Get PR Info","type":"n8n-nodes-base.httpRequest","position":[-1260,165],"typeVersion":4.2},{"parameters":{"workflowId":{"__rl":true,"value":"uGqCptWtD45pUJt4","mode":"list","cachedResultName":"[COLO] (Sub) Get COLO Variables"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-1480,165],"id":"f001d095-c068-4142-af4f-0eafab6447ad","name":"Get COLO Variables"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"3304ec64-441d-425a-b376-fcbff85583b3","leftValue":"={{ $json.state }}","rightValue":"open","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1040,165],"id":"05831c70-751e-4241-8fc1-2554333e939c","name":"If PR Opened"}],"connections":{"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Parse Last Diff Line":{"main":[[{"node":"Code","type":"main","index":0}]]},"AI Agent":{"main":[[{"node":"Process GPT Review","type":"main","index":0}]]},"Get PR Files Change":{"main":[[{"node":"Loop","type":"main","index":0}]]},"Skip File Change":{"main":[[{"node":"Parse Last Diff Line","type":"main","index":0}],[{"node":"Loop","type":"main","index":0}]]},"Post PR Comment":{"main":[[{"node":"Loop","type":"main","index":0}]]},"Loop":{"main":[[],[{"node":"Skip File Change","type":"main","index":0}]]},"Process GPT Review":{"main":[[{"node":"If GPT Review Needed","type":"main","index":0}]]},"If GPT Review Needed":{"main":[[{"node":"Post PR Comment","type":"main","index":0}],[{"node":"Loop","type":"main","index":0}]]},"Code":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Form Trigger":{"main":[[{"node":"Get COLO Variables","type":"main","index":0}]]},"Get COLO Variables":{"main":[[{"node":"Get PR Info","type":"main","index":0}]]},"Get PR Info":{"main":[[{"node":"If PR Opened","type":"main","index":0}]]},"If PR Opened":{"main":[[{"node":"Get PR Files Change","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"f812cac5-aa43-4e2b-86e0-7831ec49a4c1","triggerCount":1,"tags":[]}