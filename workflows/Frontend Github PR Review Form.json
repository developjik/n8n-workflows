{"createdAt":"2025-05-16T00:58:19.573Z","updatedAt":"2025-05-28T01:35:44.000Z","id":"YfdG510wDgTIZS0Q","name":"Frontend Github PR Review Form","active":true,"nodes":[{"parameters":{"model":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"gpt-4o-mini"},"options":{}},"id":"eda0fb27-aa61-45e5-9a64-0aedd93cd305","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[500,40],"typeVersion":1.2,"credentials":{"openAiApi":{"id":"teZK5ibPNHcUd7eK","name":"Developjik OpenAi account"}}},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const parseLastDiff = (gitDiff, filename) => { \n  gitDiff = gitDiff.replace(/\\n\\\\ No newline at end of file/, '')\n  \n  const diffList = gitDiff.trimEnd().split('\\n').reverse();\n  const lastLineFirstChar = diffList?.[0]?.[0];\n  const lastDiff =\n    diffList.find((item) => {\n      return /^@@ \\-\\d+,\\d+ \\+\\d+,\\d+ @@/g.test(item);\n    }) || '';\n\n  const [lastOldLineCount, lastNewLineCount] = lastDiff\n    .replace(/@@ \\-(\\d+),(\\d+) \\+(\\d+),(\\d+) @@.*/g, ($0, $1, $2, $3, $4) => {\n      return `${+$1 + +$2},${+$3 + +$4}`;\n    })\n    .split(',');\n  \n  if (!/^\\d+$/.test(lastOldLineCount) || !/^\\d+$/.test(lastNewLineCount)) {\n    return {\n      lastOldLine: -1,\n      lastNewLine: -1,\n      gitDiff: gitDiff,\n    };\n  }\n\n  const lastOldLine = lastLineFirstChar === '+' ? null : (parseInt(lastOldLineCount) || 0) - 1;\n  const lastNewLine = lastLineFirstChar === '-' ? null : (parseInt(lastNewLineCount) || 0) - 1;\n\n  return {\n    filename,\n    lastOldLine,\n    lastNewLine,\n    gitDiff,\n  };\n};\n\nreturn parseLastDiff($input.item.json.patch || '', $input.item.json.filename || '' )\n"},"id":"37459b35-a9ad-495f-82cb-ee386e4d6f66","name":"Parse Last Diff Line","type":"n8n-nodes-base.code","position":[60,-160],"typeVersion":2},{"parameters":{"promptType":"define","text":"=파일 경로: {{ $('Loop').item.json.filename }}\n\n다음은 프론트엔드 코드의 변경 사항입니다.\n아래의 **기존 코드와 변경된 코드**를 기반으로, 다음 기준에 따라 **React/Next.js 기반 코드 리뷰**를 작성해 주세요.\n\n🧠 **코드 리뷰 상세 지침**\n\n1.  **변경 의도 파악 및 명시:**\n    *   코드 변경 전후를 비교하여 **주요 변경 사항과 그 의도를 추론**하고, 리뷰 서두에 간략히 요약해 주세요.\n\n2.  **리뷰 핵심 초점:**\n    *   **가독성 및 유지보수성**: 코드가 명확하고 이해하기 쉬운지, 향후 수정이 용이한 구조인지 평가해 주세요.\n    *   **성능**: 불필요한 렌더링, 비효율적인 로직 등 성능에 영향을 줄 수 있는 부분이 있는지 확인해 주세요.\n    *   **React/Next.js 모범 사례**: Hooks 사용 규칙, 컴포넌트 설계, 상태 관리, Next.js 기능 활용 등이 적절한지 검토해 주세요. (예: key prop 누락, 불필요한 useEffect 사용 등)\n    *   **잠재적 버그 및 안티패턴**: 예상치 못한 문제를 일으킬 수 있는 부분이나 일반적인 안티패턴이 있는지 확인해 주세요.\n\n3.  **개선 제안:**\n    *   새로운 코드에서 **개선할 부분이 있다면 구체적인 코드 예시와 함께 제안**해 주세요.\n    *   제안은 **\"~하는 것은 어떨까요?\" 또는 \"~을 고려해보면 좋을 것 같습니다.\"** 와 같이 부드러운 어투를 사용해 주세요.\n    *   모든 제안에는 **명확한 기술적 근거**를 포함해 주세요.\n\n4.  **긍정적 피드백:**\n    *   **잘 작성된 부분이나 좋은 아이디어가 있다면 반드시 언급**하고 칭찬해 주세요. 동료의 성장에 도움이 됩니다.\n\n5.  **리뷰 형식:**\n    *   **한국어 Markdown 포맷**으로 작성해 주세요.\n    *   가능하다면 다음과 같은 구조를 따라주세요:\n        *   `### 📝 변경 사항 요약 및 의도 파악`\n        *   `### 👍 잘된 점`\n        *   `### 💡 개선 제안`\n        *   `### 🤔 추가 논의/고려 사항 (선택)`\n\n**🔀 코드 변경 전 원본 코드**:\n```tsx\n{{ $json.originalCode }}\n\n\n✅ 코드 변경 후 새로운 코드:\n\n{{ $json.newCode }}\n\n🎁 코드 리뷰는 동료 개발자의 성장을 돕는 관점에서 진심을 담아, 건설적이고 실행 가능한 피드백을 제공해 주세요. 만약 특별히 개선할 부분이 없다면, 어떤 점이 좋았는지 상세히 설명하는 긍정적인 리뷰를 작성해 주세요.\n\n**주요 변경점 및 이유:**\n\n*   **`🧠 코드 리뷰 상세 지침` 섹션 추가:** AI에게 더 명확하고 구조화된 지침을 제공합니다.\n*   **`변경 의도 파악 및 명시` 구체화:** 추론한 의도를 리뷰에 포함하도록 했습니다.\n*   **`리뷰 핵심 초점` 명시:** 가독성, 성능, 모범 사례, 버그 등 구체적인 검토 항목을 제시했습니다.\n*   **`개선 제안` 시 어투 및 근거 강조:** 부드러운 어투와 기술적 근거를 명시적으로 요구합니다.\n*   **`긍정적 피드백` 강화:** 잘된 점을 \"반드시 언급\"하도록 하여 균형 잡힌 리뷰를 유도합니다.\n*   **`리뷰 형식` 제안:** 일관된 리뷰 구조를 위한 가이드라인을 제공합니다.\n*   **마지막 문장 강화:** \"건설적이고 실행 가능한 피드백\" 및 \"개선할 부분 없을 시 긍정적 리뷰 상세 작성\"을 추가하여 리뷰의 질을 높입니다.\n\n","options":{"systemMessage":"=🧠 프론트엔드 코드 리뷰 전문가 프롬프트 (최종 개선 버전)\n\n🎯 역할 정의\n\n당신은 React, TypeScript, Next.js, Tailwind CSS에 정통한 프론트엔드 전문가입니다.\n단순한 지적이 아닌, 실질적인 개선 방향을 제시하고 동료 개발자의 성장을 돕는 코드 리뷰어로서 활동합니다.\n\n⸻\n\n✅ 리뷰 원칙\n\t1.\t정확한 이해: 코드의 의도와 맥락을 먼저 파악하고 그에 맞는 피드백을 제공합니다.\n\t2.\t실무 중심 전문성: 이론이 아닌, 현업에서 즉시 도움이 되는 구조/패턴/리팩토링 중심으로 리뷰합니다.\n\t3.\t함께 개선하는 시선: 문제점을 짚는 것에 그치지 않고, 어떻게 개선하면 좋을지 구체적인 제안을 함께 제공합니다.\n\t4.\t다각도 고려: 유지보수성, 성능, 사용자 경험, 팀 협업까지 다양한 관점에서 피드백합니다.\n\t5.\t교육적 접근: 단순한 코드 설명이 아니라, “왜 이런 구조가 더 좋은가?”를 함께 설명하여 학습에 기여합니다.\n\n⸻\n\n🧾 **리뷰 포맷 및 구조**\n\t•\t언어: 한국어\n\t•\t형식: Markdown\n\t•\t스타일: 명확하고 간결하며 진심 담긴 설명\n\t•\t이모지: ✨, ⚠️, 💡 등으로 핵심 포인트 강조\n\t•\t코드: 개선 제안 시 TypeScript 기반의 코드 예시 포함\n\n**리뷰는 다음 구조를 따라 작성해 주세요:**\n\n---\n### 📝 변경 의도 및 전반적인 평가\n*   (코드 변경 전후를 비교하여 주요 변경 사항과 그 의도를 파악하여 간략히 설명합니다.)\n*   (코드의 전반적인 인상, 특히 잘된 부분이나 핵심적인 개선 필요성을 요약합니다.)\n\n### 👍 잘된 점 (Good Points)\n*   (구체적인 코드 예시나 패턴을 언급하며 칭찬할 부분을 상세히 기술합니다. 예: `useEffect`의 의존성 배열 관리, 명확한 타입 정의 등)\n\n### ⚠️ 개선이 필요한 부분 (Areas for Improvement)\n*   (아래 🔍 리뷰 체크리스트를 기반으로 개선이 필요한 사항을 지적합니다. 단순 지적보다는 이유와 함께 설명하고, 가능하다면 관련 코드 라인을 언급합니다.)\n    1. **[개선 포인트 제목 1]**\n       *   설명: (예: `Modal` 컴포넌트 내에 너무 많은 로직이 집중되어 있어 단일 책임 원칙(SRP)에 어긋납니다.)\n       *   (선택 사항) 관련 코드: `해당 파일 L_N-M`\n    2. **[개선 포인트 제목 2]**\n       *   ...\n\n### 💡 제안 및 해결책 (Suggestions & Solutions)\n*   (⚠️ 개선이 필요한 부분에 대한 구체적인 해결책을 제시합니다. 다음 내용들이 포함될 수 있습니다.)\n\n    *   **대안 코드 예시 (Alternative Code Examples):**\n        ```tsx\n        // TypeScript 기반의 개선된 코드 예시\n        // 예: 커스텀 훅 분리, 로직 수정 등\n        ```\n    *   **리팩토링 방향 제안 (Refactoring Directions):**\n        *   (예: 해당 로직은 `useModalState`와 같은 커스텀 훅으로 분리하여 재사용성과 테스트 용이성을 높일 수 있습니다. 또는 컨테이너/프리젠테이션 패턴 적용을 고려해 보세요.)\n    *   **추가 고려 사항 (Further Considerations):**\n        *   (예: 이 부분은 팀 내 다른 컴포넌트와의 일관성을 위해 추가 논의가 필요해 보입니다.)\n\n### 📚 참고 자료 (References)\n*   (개선 제안의 이해를 돕거나 학습에 도움이 될 만한 공식 문서, 블로그 글, 관련 패턴 등의 링크를 제공합니다. 해당 사항이 없을 경우 생략 가능합니다.)\n    *   [링크 제목 1](URL) (예: React 공식 문서 - 커스텀 훅)\n    *   [링크 제목 2](URL)\n\n### 🔄 팀 컨벤션 제안 (Team Convention Suggestions)\n*   (코드에서 반복적으로 나타나거나 팀 전체의 코드 스타일, 네이밍 규칙 등 일관성을 위해 논의/정의가 필요하다고 판단되는 부분을 제안합니다. 해당 사항이 없을 경우 생략 가능합니다.)\n    *   (예: `props`로 전달되는 이벤트 핸들러 함수의 네이밍을 `on[EventName]` 형태로 통일하는 것을 제안합니다.)\n\n---\n**(리뷰의 모든 내용이 끝난 후, 다음 형식으로 코드 평가 점수를 반드시 포함해 주세요.)**\n\n### 📊 코드 평가 점수: {점수}점 / 100\n---\n\n⸻\n\n🔍 리뷰 체크리스트\n\n🔧 React/JSX\n\t•\t컴포넌트 분리 및 책임 원칙 (SRP)\n\t•\t상태 및 props 관리 방식 (useState, useReducer, 전역 상태 등)\n\t•\t렌더링 최적화 (memo, useCallback, useMemo)\n\t•\t사이드 이펙트 처리 (useEffect의 의존성 배열 및 정리 함수)\n\t•\t조건부 렌더링 가독성\n\t•\t오류 처리 흐름 (ErrorBoundary, fallback UI 등)\n\n🔐 TypeScript\n\t•\t타입 정의 명확성 및 재사용성\n\t•\t타입 추론 vs 명시적 선언 균형\n\t•\t제네릭, 유니온, 인터섹션 타입 활용\n\t•\t타입 안전성 보장 (any 최소화, 타입 가드, `unknown` 타입 활용 등)\n\n🎨 Tailwind CSS\n\t•\t클래스 구성의 명확성 및 가독성\n\t•\t중복 유틸리티 최소화 (`@apply` 사용 시 주의점, 컴포넌트화)\n\t•\t커스텀 유틸리티 및 컴포넌트 정의 시 `@layer` 활용 적절성\n\t•\t반응형 및 상태 기반 클래스 처리 (hover:, focus:, sm: 등)\n\t•\t디자인 시스템 토큰(`theme()` 함수 또는 CSS 변수)의 일관된 사용 (컬러, 타이포, 여백 등)\n\n🚀 성능 최적화\n\t•\t불필요한 렌더링 방지 (React.memo, useMemo, useCallback 활용 적절성)\n\t•\t무거운 연산의 메모이제이션\n\t•\t코드 스플리팅 (next/dynamic, React.lazy) 및 지연 로딩\n\t•\t클린업 없는 사이드 이펙트 방지 (useEffect 내 메모리 누수 등)\n\n♿️ 접근성 (a11y)\n\t•\tARIA 속성 및 시맨틱 HTML 활용\n\t•\t키보드 네비게이션 및 포커스 관리\n\t•\t색상 대비 및 시각적 요소의 명확성\n\t•\t스크린 리더 호환성 고려 (대체 텍스트 등)\n⸻"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[500,-160],"id":"f9685ef1-0fb3-4eed-a0d9-2dce3f29f75a","name":"AI Agent"},{"parameters":{"url":"=https://api.github.com/repos/{{ $('Form Trigger').item.json.github_organization }}/{{ $('Form Trigger').item.json.github_repo }}/pulls/{{ $('Form Trigger').item.json.pr_number }}/files","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Accept","value":"application/vnd.github.v3+json"},{"name":"Authorization","value":"=Bearer {{$node[\"Get COLO Variables\"].json.github_auth}}"}]},"options":{}},"id":"b3a2b83f-f2c3-4364-abe7-0fb12e11a7e1","name":"Get PR Files Change","type":"n8n-nodes-base.httpRequest","position":[-600,165],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"501623a9-9515-4034-bb13-a5a6a4f924eb","operator":{"type":"string","operation":"isNotEmpty"},"leftValue":"={{ $json.patch }}","rightValue":""},{"id":"f2928260-ef04-47cb-9c36-432e29fe52d1","leftValue":"={{ $json.changes }}","rightValue":20,"operator":{"type":"number","operation":"gte"}}],"combinator":"or"},"looseTypeValidation":true,"options":{"ignoreCase":false}},"id":"ebb5f1b7-23a6-404d-81a5-00539bf3a642","name":"Skip File Change","type":"n8n-nodes-base.if","position":[-160,-160],"typeVersion":2.2},{"parameters":{"method":"POST","url":"=https://api.github.com/repos/{{ $('Form Trigger').item.json.github_organization }}/{{ $('Form Trigger').item.json.github_repo }}/pulls/{{ $('Form Trigger').item.json.pr_number }}/comments","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Accept","value":"application/vnd.github.v3+json"},{"name":"Authorization","value":"=Bearer {{$node[\"Get COLO Variables\"].json.github_auth}}"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"body","value":"={{ $('Process GPT Review').item.json.review }}"},{"name":"commit_id","value":"={{ $('Webhook').item.json.body.pull_request.head.sha }}"},{"name":"path","value":"={{ $('Loop').item.json.filename }}"},{"name":"line","value":"={{ $('Parse Last Diff Line').item.json.lastNewLine || $('Parse Last Diff Line').item.json.lastOldLine || 1 }}"},{"name":"side","value":"={{ $('Parse Last Diff Line').item.json.lastNewLine ? 'RIGHT' : 'LEFT' }}"}]},"options":{}},"id":"b8f9f6d2-ece6-4253-8e3f-712f59e8b17c","name":"Post PR Comment","type":"n8n-nodes-base.httpRequest","position":[1316,40],"typeVersion":4.2},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-380,165],"id":"8a72933d-cf83-49e3-9202-b4ab45b18b1e","name":"Loop"},{"parameters":{"jsCode":"var review = $input.item.json.output || '';\n\n// 정규식: 다양한 표현 대응 (굵게, 콜론, 이모지, 공백)\nvar scoreMatch = review.match(/(?:📊\\s*)?(?:\\*\\*)?코드\\s*평가\\s*점수(?:\\*\\*)?[:：]?\\s*(\\d+)/);\n\nvar score = scoreMatch ? parseInt(scoreMatch[1], 10) : 0;\n\n// 점수 앞까지만 잘라내기\nvar trimmedReview = review.split(/(?:📊\\s*)?(?:\\*\\*)?코드\\s*평가\\s*점수(?:\\*\\*)?[:：]/)[0].trim();\n\nreturn [\n  {\n    json: {\n      score: score,\n      review: trimmedReview\n    }\n  }\n];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[880,-160],"id":"16e15ce1-899c-461b-afb3-f73b72f1ac35","name":"Process GPT Review"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"8ab43db0-3e45-4ce0-8658-34d2d53fe6ac","leftValue":"={{ $json.score }}","rightValue":80,"operator":{"type":"number","operation":"lt"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1096,-35],"id":"3641938f-3d1b-42af-a846-1083180cd555","name":"If GPT Review Needed"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"var diff = $input.item.json.gitDiff || ''\n\nlet lines = diff.trimEnd().split('\\n');\n\nlet originalCode = '';\nlet newCode = '';\n\nlines.forEach(line => {\n    if (line.startsWith('-')) {\n        originalCode += line.substring(1) + \"\\n\";\n    } else if (line.startsWith('+')) {\n        newCode += line.substring(1) + \"\\n\";\n    } else if (!line.startsWith('@')) {\n        originalCode += line + \"\\n\";\n        newCode += line + \"\\n\";\n    }\n});\n\nconst codeObj = {\n  originalCode: originalCode,\n  newCode: newCode\n};\n\nreturn codeObj\n"},"id":"d9b85b3f-88a2-4a19-b476-141b7d00b4ee","name":"Code","type":"n8n-nodes-base.code","position":[280,-160],"typeVersion":2},{"parameters":{"formTitle":"Github PR Review Request Form","formFields":{"values":[{"fieldLabel":"github_organization","fieldType":"dropdown","fieldOptions":{"values":[{"option":"colosseumcoinckr"}]},"requiredField":true},{"fieldLabel":"github_repo","fieldType":"dropdown","fieldOptions":{"values":[{"option":"pms-frontend"}]},"requiredField":true},{"fieldLabel":"pr_number","fieldType":"number","placeholder":"PR 번호를 입력하세요.","requiredField":true}]},"options":{"appendAttribution":false,"buttonLabel":"PR Review 요청","path":"frontend-code-review","ignoreBots":true}},"type":"n8n-nodes-base.formTrigger","typeVersion":2.2,"position":[-1700,160],"id":"d19427a1-0588-4722-b4ff-871e181e8b0c","name":"Form Trigger","webhookId":"7c0e93b8-4080-4fe7-9f94-4ab029a10f01"},{"parameters":{"url":"=https://api.github.com/repos/{{ $('Form Trigger').item.json.github_organization }}/{{ $('Form Trigger').item.json.github_repo }}/pulls/{{ $('Form Trigger').item.json.pr_number }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Accept","value":"application/vnd.github.v3+json"},{"name":"Authorization","value":"=Bearer {{$node[\"Get COLO Variables\"].json.github_auth}}"}]},"options":{}},"id":"22ad9c36-d728-422f-9b18-21faad162f5b","name":"Get PR Info","type":"n8n-nodes-base.httpRequest","position":[-1040,160],"typeVersion":4.2},{"parameters":{"workflowId":{"__rl":true,"value":"uGqCptWtD45pUJt4","mode":"list","cachedResultName":"[COLO] (Sub) Get COLO Variables"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-1480,165],"id":"f001d095-c068-4142-af4f-0eafab6447ad","name":"Get COLO Variables"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"3304ec64-441d-425a-b376-fcbff85583b3","leftValue":"={{ $json.state }}","rightValue":"open","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-820,165],"id":"05831c70-751e-4241-8fc1-2554333e939c","name":"If PR Opened"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"dabf2a86-ecd4-4f9a-9736-4366de0b6df3","leftValue":"={{ $('Form Trigger').item.json.github_organization }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}},{"id":"d2125855-f3b1-45c0-aeb4-7f1e89063f1a","leftValue":"={{ $('Form Trigger').item.json.github_repo }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}},{"id":"ec602f6b-7888-44e2-b16d-75e70710a23e","leftValue":"={{ $('Form Trigger').item.json.pr_number }}","rightValue":"","operator":{"type":"number","operation":"exists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1280,180],"id":"659ee28b-1c9d-4524-9990-e644c2dc619a","name":"Form Check"}],"connections":{"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Parse Last Diff Line":{"main":[[{"node":"Code","type":"main","index":0}]]},"AI Agent":{"main":[[{"node":"Process GPT Review","type":"main","index":0}]]},"Get PR Files Change":{"main":[[{"node":"Loop","type":"main","index":0}]]},"Skip File Change":{"main":[[{"node":"Parse Last Diff Line","type":"main","index":0}],[{"node":"Loop","type":"main","index":0}]]},"Post PR Comment":{"main":[[{"node":"Loop","type":"main","index":0}]]},"Loop":{"main":[[],[{"node":"Skip File Change","type":"main","index":0}]]},"Process GPT Review":{"main":[[{"node":"If GPT Review Needed","type":"main","index":0}]]},"If GPT Review Needed":{"main":[[{"node":"Post PR Comment","type":"main","index":0}],[{"node":"Loop","type":"main","index":0}]]},"Code":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Form Trigger":{"main":[[{"node":"Get COLO Variables","type":"main","index":0}]]},"Get COLO Variables":{"main":[[{"node":"Form Check","type":"main","index":0}]]},"Get PR Info":{"main":[[{"node":"If PR Opened","type":"main","index":0}]]},"If PR Opened":{"main":[[{"node":"Get PR Files Change","type":"main","index":0}]]},"Form Check":{"main":[[{"node":"Get PR Info","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"49c30988-e3ca-4357-92e6-ed824bc0e47b","triggerCount":1,"tags":[]}