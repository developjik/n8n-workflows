{"createdAt":"2025-04-16T04:22:08.092Z","updatedAt":"2025-04-22T07:01:57.000Z","id":"4mvHVAF3QOFaqLZT","name":"PMS Bot Jira 작업현황","active":true,"nodes":[{"parameters":{"select":"channel","channelId":{"__rl":true,"value":"C08BBCYDV4M","mode":"list","cachedResultName":"engineering_pms"},"text":"={{ $json.slackMessage }}","otherOptions":{}},"type":"n8n-nodes-base.slack","typeVersion":2.3,"position":[620,0],"id":"2f3553e7-994b-4132-97a1-4427afa21a48","name":"Slack","webhookId":"9fe89c7c-b2e2-4562-8c45-c603b997a890","credentials":{"slackApi":{"id":"Bqw9EwOIkH7skn99","name":"PMS BOT"}}},{"parameters":{"rule":{"interval":[{"field":"weeks","triggerAtDay":[1,2,3,4,5],"triggerAtHour":9}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[0,0],"id":"df555a2d-6360-4cf1-864d-9412de584355","name":"09:00 Trigger"},{"parameters":{"operation":"getAll","returnAll":true,"options":{"jql":"assignee IN (currentUser(), \"김재한\", \"김상현\") AND issuetype IN (Story, Bug) AND statusCategory != Done"}},"id":"8d0b159c-c8e3-4d68-abfe-c160b22bbb81","name":"Get PMS Developer Jira Issues","type":"n8n-nodes-base.jira","position":[180,0],"typeVersion":1,"credentials":{"jiraSoftwareCloudApi":{"id":"jd9f8LcXIUpGLHG7","name":"Colo Developjik1 Jira SW Cloud account"}}},{"parameters":{"jsCode":"// 데이터 가져오기\nconst items = $input.all();\nlet jiraIssues = [];\n\n// 모든 아이템의 json 속성에서 이슈 데이터 수집\nif (items && items.length > 0) {\n  items.forEach(item => {\n    if (item.json) {\n      jiraIssues.push(item.json);\n    }\n  });\n}\n\n// 상태별 분류\nconst inProgressIssues = jiraIssues.filter(issue => \n  issue.fields && \n  issue.fields.statusCategory && \n  issue.fields.statusCategory.key === 'indeterminate'\n);\n\nconst todoIssues = jiraIssues.filter(issue => \n  issue.fields && \n  issue.fields.statusCategory && \n  issue.fields.statusCategory.key === 'new'\n);\n\n// 날짜 포맷팅\nconst today = new Date();\nconst formattedDate = `${today.getFullYear()}년 ${today.getMonth() + 1}월 ${today.getDate()}일`;\n\n// 우선순위 이모지 매핑\nconst priorityEmojis = {\n  'Highest': '🔴',\n  'High': '🟠',\n  'Medium': '🟡',\n  'Low': '🟢',\n  'Lowest': '🔵'\n};\n\n// 슬랙 메시지 포맷 생성\nlet slackMessage = `*📊 JIRA 작업 현황 보고* (${formattedDate} 기준)\\n\\n`;\n\n// 진행 중인 작업\nslackMessage += `*🔶 진행 중인 작업 (IN PROGRESS)* - 총 ${inProgressIssues.length}건\\n`;\nslackMessage += \"```\\n\";\n\nif (inProgressIssues.length === 0) {\n  slackMessage += \"📭 진행 중인 작업이 없습니다.\\n\";\n} else {\n  inProgressIssues.forEach((issue, index) => {\n    const priorityEmoji = issue.fields.priority && issue.fields.priority.name ? \n      (priorityEmojis[issue.fields.priority.name] || '⚪️') : '⚪️';\n    \n    slackMessage += `${index+1}. <${issue.key}> ${priorityEmoji} *${issue.fields.summary}*\\n`;\n    slackMessage += `   • 상태: ${issue.fields.status.name}\\n`;\n    \n    // 우선순위가 있는 경우에만 추가\n    if (issue.fields.priority && issue.fields.priority.name) {\n      slackMessage += `   • 우선순위: ${issue.fields.priority.name}\\n`;\n    }\n    \n    // 담당자 정보 추가 (있는 경우)\n    if (issue.fields.assignee && issue.fields.assignee.displayName) {\n      slackMessage += `   • 담당자: ${issue.fields.assignee.displayName}\\n`;\n    }\n    \n    slackMessage += \"\\n\";\n  });\n}\nslackMessage += \"```\\n\";\n\n// 할 작업\nslackMessage += `\\n*🔷 앞으로 할 작업 (TO DO)* - 총 ${todoIssues.length}건\\n`;\nslackMessage += \"```\\n\";\n\nif (todoIssues.length === 0) {\n  slackMessage += \"📭 할 작업이 없습니다.\\n\";\n} else {\n  todoIssues.forEach((issue, index) => {\n    const priorityEmoji = issue.fields.priority && issue.fields.priority.name ? \n      (priorityEmojis[issue.fields.priority.name] || '⚪️') : '⚪️';\n    \n    slackMessage += `${index+1}. <${issue.key}> ${priorityEmoji} *${issue.fields.summary}*\\n`;\n    slackMessage += `   • 상태: ${issue.fields.status.name}\\n`;\n    \n    // 우선순위가 있는 경우에만 추가\n    if (issue.fields.priority && issue.fields.priority.name) {\n      slackMessage += `   • 우선순위: ${issue.fields.priority.name}\\n`;\n    }\n    \n    // 담당자 정보 추가 (있는 경우)\n    if (issue.fields.assignee && issue.fields.assignee.displayName) {\n      slackMessage += `   • 담당자: ${issue.fields.assignee.displayName}\\n`;\n    }\n    \n    slackMessage += \"\\n\";\n  });\n}\nslackMessage += \"```\\n\";\n\n// 요약 정보 추가\nslackMessage += `\\n*📌 요약*\\n`;\nslackMessage += `• 전체 작업: ${jiraIssues.length}건\\n`;\nslackMessage += `• 진행 중: ${inProgressIssues.length}건\\n`;\nslackMessage += `• 할 작업: ${todoIssues.length}건\\n`;\n\n// 결과 반환\nreturn [{json: {slackMessage}}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[400,0],"id":"6d59d161-34fb-4ed4-a083-83a25fe67d85","name":"Jira To Slack Message"}],"connections":{"09:00 Trigger":{"main":[[{"node":"Get PMS Developer Jira Issues","type":"main","index":0}]]},"Get PMS Developer Jira Issues":{"main":[[{"node":"Jira To Slack Message","type":"main","index":0}]]},"Jira To Slack Message":{"main":[[{"node":"Slack","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]},"node:09:00 Schedule Trigger":{"recurrenceRules":[]},"node:17:00 Schedule Trigger":{"recurrenceRules":[]},"node:09:00 Trigger":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"199fd73c-f8a1-4d2d-aff7-67d0d170068c","triggerCount":1,"tags":[]}